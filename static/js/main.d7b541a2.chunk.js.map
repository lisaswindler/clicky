{"version":3,"sources":["components/AnimalCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Nav/index.js","App.js","index.js"],"names":["FriendCard","props","className","id","alt","name","src","image","Wrapper","children","Title","NavTabs","App","state","animals","correctGuesses","bestScore","clickMessage","clickOnAnimal","console","log","shuffleAnimals","cards","i","length","j","Math","floor","random","temp","setState","matches","Nav","this","map","animal","AnimalCard","key","Component","ReactDOM","render","document","getElementById"],"mappings":"+qCAaeA,MAVf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBAAgBC,GAAIF,EAAME,IACvC,yBAAKC,IAAKH,EAAMI,KAAMC,IAAKL,EAAMM,W,MCA1BC,MAJf,SAAiBP,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMQ,W,MCG1BC,MAJf,SAAeT,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMQ,W,MCSvBE,MAVf,WACE,OACE,wBAAIT,UAAU,gBACZ,wBAAIA,UAAU,e,OC8CLU,E,4MA5CbC,MAAQ,CACNC,UACAC,eAAgB,EAChBC,UAAW,EACXC,aAAc,yD,EAGhBC,cAAgB,SAAAf,GACfgB,QAAQC,IAAI,WACZ,EAAKC,kB,EAGNA,eAAiB,WAEf,IADA,IAAIC,EAAQ,EAAKT,MAAMC,QACdS,EAAI,EAAGA,EAAID,EAAME,OAAS,EAAGD,IAAK,CACzC,IAAME,EAAIF,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAME,OAASD,IAEnDM,EAAOP,EAAMG,GACnBH,EAAMG,GAAKH,EAAMC,GACjBD,EAAMC,GAAKM,EAEb,EAAKC,SAAS,CAACC,QAAST,K,uDAIhB,IAAD,OACP,OACE,kBAAC,EAAD,KACI,kBAACU,EAAD,MACF,kBAAC,EAAD,sBACCC,KAAKpB,MAAMC,QAAQoB,KAAI,SAAAC,GAAM,OAC5B,kBAACC,EAAD,CACElB,cAAe,EAAKA,cACpBf,GAAIgC,EAAOhC,GACXkC,IAAKF,EAAOhC,GACZE,KAAM8B,EAAO9B,KACbE,MAAO4B,EAAO5B,gB,GArCR+B,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d7b541a2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\" id={props.id}>\n        <img alt={props.name} src={props.image}/>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavTabs() {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        \n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React, { Component } from \"react\";\nimport AnimalCard from \"./components/AnimalCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Nav from \"./components/Nav\";\nimport animals from \"./animals.json\";\n\nclass App extends Component {\n  state = {\n    animals,\n    correctGuesses: 0,\n    bestScore: 0,\n    clickMessage: \"Click away! But don't click on the same animal twice.\"\n  };\n\n  clickOnAnimal = id => {\n   console.log(\"clicked\");\n   this.shuffleAnimals();\n  };\n\n  shuffleAnimals = () => {\n    let cards = this.state.animals;\n    for (let i = 0; i < cards.length - 1; i++) {\n      const j = i + Math.floor(Math.random() * (cards.length - i));\n\n      const temp = cards[j];\n      cards[j] = cards[i];\n      cards[i] = temp;\n    }\n    this.setState({matches: cards});\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n          <Nav></Nav>\n        <Title>Wild & Clicky</Title>\n        {this.state.animals.map(animal => (\n          <AnimalCard\n            clickOnAnimal={this.clickOnAnimal}\n            id={animal.id}\n            key={animal.id}\n            name={animal.name}\n            image={animal.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}