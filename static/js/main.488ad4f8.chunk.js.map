{"version":3,"sources":["components/AnimalCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","animalOnClick","props","handleOnClick","id","className","onClick","this","name","alt","src","image","React","Component","Wrapper","children","Title","App","state","animals","correctClicks","bestScore","navMessage","animalClick","a","clickedCard","filter","animal","clicked","setState","resetCards","shuffleCards","cards","i","length","j","Math","floor","random","temp","map","index","AnimalCard","key","ReactDOM","render","document","getElementById"],"mappings":"6rCAoBeA,G,kNAfXC,cAAgB,WACZ,EAAKC,MAAMC,cAAc,EAAKD,MAAME,K,uDAIpC,OACI,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,gBAAgBC,QAASC,KAAKN,cAAeG,GAAIG,KAAKL,MAAMM,MACvE,yBAAKC,IAAKF,KAAKL,MAAMM,KAAME,IAAKH,KAAKL,MAAMS,c,GAVtCC,IAAMC,Y,MCIhBC,MAJf,SAAiBZ,GACf,OAAO,yBAAKG,UAAU,UAAUD,GAAG,WAAWF,EAAMa,W,MCGvCC,MAJf,SAAed,GACb,OAAO,wBAAIG,UAAU,SAASH,EAAMa,W,OCwFvBE,E,4MArFXC,MAAQ,CACJC,UACAC,cAAe,EACfC,UAAW,EACXC,WAAY,yD,EAGhBC,Y,uCAAc,WAAMnB,GAAN,eAAAoB,EAAA,uDACNC,EAAc,EAAKP,MAAMC,QAAQO,QAAO,SAAAC,GAAM,OAAIA,EAAOvB,KAAOA,MACrD,GAAGwB,SAChB,EAAKC,SAAS,CACZT,cAAe,EACfE,WAAW,+BAEb,EAAKQ,cACG,EAAKZ,MAAME,cAAgB,IACnCK,EAAY,GAAGG,SAAU,EAEzB,EAAKC,SAAS,CAACT,cAAe,EAAKF,MAAME,cAAgB,IAAI,WACvD,EAAKF,MAAME,cAAgB,EAAKF,MAAMG,WACxC,EAAKQ,SAAS,CAAER,UAAW,EAAKH,MAAME,mBAG1C,EAAKS,SAAS,CAACP,WAAY,oBAC3B,EAAKS,iBAELN,EAAY,GAAGG,SAAU,EAEzB,EAAKV,MAAME,cAAgB,EAC3B,EAAKF,MAAMI,WAAa,qCACxB,EAAKO,SAAS,CAAER,UAAW,KAC3B,EAAKS,cAxBG,2C,wDA4BZC,aAAe,WAEb,IADA,IAAIC,EAAQ,EAAKd,MAAMC,QACdc,EAAI,EAAGA,EAAID,EAAME,OAAS,EAAGD,IAAK,CACzC,IAAME,EAAIF,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAME,OAASD,IACnDM,EAAOP,EAAMG,GACnBH,EAAMG,GAAKH,EAAMC,GACjBD,EAAMC,GAAKM,EAEb,EAAKV,SAAS,CAACV,QAASa,K,EAG1BF,WAAa,WACX,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAKf,MAAMC,QAAQe,OAASD,IAE9Cd,EAAQc,GAAGL,SAAU,EACrB,EAAKC,SAAS,CACZT,cAAe,EACfD,QAASA,IAEX,EAAKY,gB,uDAID,IAAD,OACL,OACI,kBAAC,EAAD,KACI,yBAAK1B,UAAU,UACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,QAAQE,KAAKW,MAAMI,YADpC,UAEYf,KAAKW,MAAME,cAFvB,sBAEyDb,KAAKW,MAAMG,aAI5E,kBAAC,EAAD,sBACDd,KAAKW,MAAMC,QAAQqB,KAAI,SAACrB,EAASsB,GAChC,OAAO,kBAACC,EAAD,CACHC,IAAKF,EACLrC,GAAIe,EAAQf,GACZI,KAAMW,EAAQX,KACdG,MAAOQ,EAAQR,MACfR,cAAe,EAAKoB,sB,GA7EtBV,a,MCDlB+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.488ad4f8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nclass FriendCard extends React.Component {\n\n    animalOnClick = () => {\n        this.props.handleOnClick(this.props.id)\n     };\n\n    render() {\n        return (\n            <div className=\"card hvr-grow\">\n                <div className=\"img-container\" onClick={this.animalOnClick} id={this.props.name}>\n                    <img alt={this.props.name} src={this.props.image}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FriendCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\" id=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport AnimalCard from \"./components/AnimalCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport animals from \"./animals.json\";\n\nclass App extends Component {\n    state = {\n        animals,\n        correctClicks: 0,\n        bestScore: 0,\n        navMessage: \"Click away! But don't click on the same animal twice.\"\n    };\n\n    animalClick = async id => {\n        var clickedCard = this.state.animals.filter(animal => animal.id === id);\n        if(clickedCard[0].clicked) {\n          this.setState({\n            correctClicks: 0,\n            navMessage:\"Oops! Better start over...\",\n          });\n          this.resetCards();\n        } else if(this.state.correctClicks < 11) {\n          clickedCard[0].clicked = true;\n          // increment the scores\n          this.setState({correctClicks: this.state.correctClicks + 1}, () => {\n            if (this.state.correctClicks > this.state.bestScore){\n              this.setState({ bestScore: this.state.correctClicks });\n            }\n          });\n          this.setState({navMessage: \"So far so good!\" });\n          this.shuffleCards();\n        } else {\n          clickedCard[0].clicked = true;\n          // set counters\n          this.state.correctClicks = 0;\n          this.state.navMessage = \"Great job! Your memory is AMAZING!\";\n          this.setState({ bestScore: 12 });\n          this.resetCards();\n        }\n      };\n    \n      shuffleCards = () => {\n        let cards = this.state.animals;\n        for (let i = 0; i < cards.length - 1; i++) {\n          const j = i + Math.floor(Math.random() * (cards.length - i));\n          const temp = cards[j];\n          cards[j] = cards[i];\n          cards[i] = temp;\n        }\n        this.setState({animals: cards});\n      };\n    \n      resetCards = () => {\n        for (let i = 0; i < this.state.animals.length ; i++){\n        // Mark all as clicked: false\n          animals[i].clicked = false;\n          this.setState({\n            correctClicks: 0,\n            animals: animals\n          });\n          this.shuffleCards();\n        }\n      };\n\n    render() {\n        return (\n            <Wrapper>\n                <nav className=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <div className=\"navbar-text\">\n                            <p className=\"mb-0\">{this.state.navMessage}</p>\n                            Score: {this.state.correctClicks} | Your Top Score: {this.state.bestScore}\n                        </div>\n                    </div>\n                </nav>\n                <Title>Wild & Clicky</Title>   \n              {this.state.animals.map((animals, index) => {\n                return <AnimalCard\n                    key={index}\n                    id={animals.id}\n                    name={animals.name}\n                    image={animals.image}\n                    handleOnClick={this.animalClick}\n                />\n              })}\n           \n            </Wrapper>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}